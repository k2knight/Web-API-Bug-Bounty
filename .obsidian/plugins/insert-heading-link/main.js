/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// main.ts
__export(exports, {
  default: () => InsertHeadingLink
});
var import_obsidian = __toModule(require("obsidian"));
var InsertHeadingLink = class extends import_obsidian.Plugin {
  onload() {
    return __async(this, null, function* () {
      console.log("loading insert-heading-link");
      this.addCommand({
        id: "addHeadingLink",
        name: "Add Heading Link",
        hotkeys: [
          {
            modifiers: ["Mod", "Shift"],
            key: "L"
          }
        ],
        editorCallback: (editor) => this.addHeadingLink(editor)
      });
    });
  }
  addHeadingLink(editor) {
    const selected_text = editor.getSelection();
    editor.replaceSelection("[[##" + selected_text + "]]");
    const position = editor.getCursor();
    editor.setCursor({ line: position.line, ch: position.ch - 2 });
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHtcclxuXHRBcHAsXHJcblx0TWFya2Rvd25WaWV3LFxyXG5cdFBsdWdpbixcclxuXHRFZGl0b3IsXHJcblx0UGx1Z2luU2V0dGluZ1RhYixcclxuXHRTZXR0aW5nXHJcbn0gZnJvbSAnb2JzaWRpYW4nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5zZXJ0SGVhZGluZ0xpbmsgZXh0ZW5kcyBQbHVnaW4ge1xyXG5cclxuXHRhc3luYyBvbmxvYWQoKSB7XHJcblx0XHRjb25zb2xlLmxvZygnbG9hZGluZyBpbnNlcnQtaGVhZGluZy1saW5rJyk7XHJcblxyXG5cdFx0XHR0aGlzLmFkZENvbW1hbmQoe1xyXG5cdFx0XHRcdGlkOiAnYWRkSGVhZGluZ0xpbmsnLFxyXG5cdFx0XHRcdG5hbWU6ICdBZGQgSGVhZGluZyBMaW5rJyxcclxuXHRcdFx0XHRob3RrZXlzOiBbXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdG1vZGlmaWVyczogWydNb2QnLCAnU2hpZnQnXSxcclxuXHRcdFx0XHRcdFx0a2V5OiAnTCcsXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdF0sXHJcblx0XHRcdFx0ZWRpdG9yQ2FsbGJhY2s6IChlZGl0b3IpID0+IHRoaXMuYWRkSGVhZGluZ0xpbmsoZWRpdG9yKSxcclxuXHRcdFx0fSk7XHJcblxyXG5cdH1cclxuXHJcbnByaXZhdGUgYWRkSGVhZGluZ0xpbmsoZWRpdG9yOiBFZGl0b3IpIHtcclxuXHRcdGNvbnN0IHNlbGVjdGVkX3RleHQgPSBlZGl0b3IuZ2V0U2VsZWN0aW9uKClcclxuXHRcdGVkaXRvci5yZXBsYWNlU2VsZWN0aW9uKFxyXG5cdFx0XHQnW1sjIycrc2VsZWN0ZWRfdGV4dCsnXV0nXHJcblx0XHQpO1xyXG5cdFx0Y29uc3QgcG9zaXRpb24gPSBlZGl0b3IuZ2V0Q3Vyc29yKCk7XHJcblx0XHRlZGl0b3Iuc2V0Q3Vyc29yKHsgbGluZTogcG9zaXRpb24ubGluZSwgY2g6IHBvc2l0aW9uLmNoIC0gMn0pXHJcblx0fVxyXG5cclxufVxyXG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQU9PO0FBRVAsc0NBQStDLHVCQUFPO0FBQUEsRUFFL0MsU0FBUztBQUFBO0FBQ2QsY0FBUSxJQUFJO0FBRVgsV0FBSyxXQUFXO0FBQUEsUUFDZixJQUFJO0FBQUEsUUFDSixNQUFNO0FBQUEsUUFDTixTQUFTO0FBQUEsVUFDUjtBQUFBLFlBQ0MsV0FBVyxDQUFDLE9BQU87QUFBQSxZQUNuQixLQUFLO0FBQUE7QUFBQTtBQUFBLFFBR1AsZ0JBQWdCLENBQUMsV0FBVyxLQUFLLGVBQWU7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUs1QyxlQUFlLFFBQWdCO0FBQ3JDLFVBQU0sZ0JBQWdCLE9BQU87QUFDN0IsV0FBTyxpQkFDTixTQUFPLGdCQUFjO0FBRXRCLFVBQU0sV0FBVyxPQUFPO0FBQ3hCLFdBQU8sVUFBVSxFQUFFLE1BQU0sU0FBUyxNQUFNLElBQUksU0FBUyxLQUFLO0FBQUE7QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
